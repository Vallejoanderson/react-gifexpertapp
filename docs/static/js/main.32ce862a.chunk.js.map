{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAIN,GAERA,EAAWO,OAAOC,OAAS,IAC3BV,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACxCR,EAAc,MAKlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAnBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OAFAZ,QAAQC,IAAKoB,EAAIC,EAAOV,GAGpB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCLLO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAEHnC,QAAQC,IAAKkC,GAEb1B,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,YAQ9B,CAAEpB,IAEEqB,EDzB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAWrB,OAVA9B,QAAQC,IAAK6B,GAWT,qCACI,6BAAOpB,IAELoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,aADe,CACd,EAAD,eAESA,GADAA,EAAIC,aEM1BgB,EA7BM,WAEjB,MAAoC3C,mBAAU,CAAC,cAA/C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.32ce862a.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setinputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(inputValue);\n\n        if( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats ] );\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={ inputValue }\n                onChange = { handleInputChange }\n            />            \n         </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=gIGrkAJCAHQvlK1XOLg8Z6LKR0fdCrn3&limit=10`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        }\n    })\n\n    return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url} ) => {\n\n    console.log( id, title, url );\n\n    return (\n        <div className=\"card animate__animated animate__zoomIn\">\n            <img src={ url } alt={ title }/>\n            <p> { title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ( { category } ) => {\n    \n    const { data:images, loading } = useFetchGifs( category );\n    console.log( loading );\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( imgs => setImages( imgs) ) \n    // }, [ category ] )\n\n    \n    //getGifs();\n\n    return (\n        <>\n            <h3>{  category }</h3>\n\n            { loading && <p>Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                        images.map( img => //Desestructuración de objecto images\n                            <GifGridItem \n                                key={img.id}\n                                { ...img }\n                            />\n                        )\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                console.log( imgs )\n        \n                getGifs( category )\n                    .then( imgs => {\n                        setState({\n                            data: imgs,\n                            loading: false,\n                        })\n                    })\n\n            })\n\n\n\n    }, [ category ])\n\n    return state; // data { data: [], loading: true }\n\n}","import { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState( ['One Punch'] );\n\n    // const handleAdd = () => {\n    //     console.log('Toqué el boton')\n    //     setCategories( [...categories, 'Hola'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories= { setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid\n                            key={ category } \n                            category={ category } \n                        />\n                    )\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// Crear dentro de src\n// <h2>GitExpertApp</h2>\n// <hr />>"],"sourceRoot":""}